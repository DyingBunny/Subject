//1.东东对幂运算很感兴趣,在学习的过程中东东发现了一些有趣的性质: 9^3 = 27^2, 2^10 = 32^2
//东东对这个性质充满了好奇, 东东现在给出一个整数n, 希望你能帮助他求出满足 a^b = c^d(1 ≤ a, b, c, d ≤ n)的式子有多少个。

//----------------------我的方法20%通过，大数问题--------------------

//#include<iostream>
//using namespace std;
//
//void Init(int n, long long arr1[20000], long long arr2[20000])
//{
//	int a, b;
//	long long x, y;
//	int i = 0;
//	for (a = 1; a <= n; a++)
//	{
//		for (b = 1; b <= n; b++)
//		{
//			x = a;
//			y = b;
//			for (; y >= 1; y--)
//			{
//				if (y == 1)
//				{
//					x = x;
//				}
//				else
//				{
//					x = x*a;
//				}
//			}
//			arr1[i] = x;
//			arr2[i] = x;
//			i++;
//		}
//	}
//}
//
//int Change(int n, long long arr1[20000], long long arr2[20000])
//{
//	int i, j;
//	int cout = 0;
//	n = n*n;
//	for (i = 0; i < n; i++)
//	{
//		for (j = 0; j < n; j++)
//		{
//			if (arr1[i] == arr2[j])
//			{
//				cout++;
//			}
//		}
//	}
//	return cout;
//}
//int main()
//{
//	int n;
//	int result;
//	long long arr1[20000];
//	long long arr2[20000];
//	scanf("%d",&n);
//	Init(n, arr1, arr2);
//	result = Change(n, arr1, arr2);
//	result = result % 1000000007;
//	printf("%d", result);
//	system("pause");
//	return 0;
//}

//--------------------------网络答案100%---------------------
//#include<iostream>
//#include<cmath>
//using namespace std;
//int gcd(int a, int b)//求公约数
//{
//	int c;
//	c = (a>b) ? b : a;
//	while (a%c != 0 || b%c != 0)
//	{
//		c--;
//	}
//	return c;
//}
//int geshu(int a, int b, int n){//求最多组合数
//	int c = gcd(a, b);
//	return floor(n / (b / c));
//}
//long long fun(int i, int n){//求以i为底，在n里面有多少个次幂，1,2,3,4.。k然后任意两个不同的组合，
//	int k = 2;
//	int temp = i*i;
//	while (temp*i <= n){
//		temp *= i;
//		k++;
//	}
//	long long ans = 0;
//	for (int j = 1; j<k; j++){
//		for (int l = j + 1; l <= k; l++){
//			ans += geshu(j, l, n);
//			ans %= 1000000007;
//		}
//
//	}
//	return ans;
//}
//bool zhishu(int i){//判断i是否是2-i里面中某个数的k次幂，n最大10的6次方，i最大10的三次方，即最大2的10次方
//	int k = sqrt(i);
//	for (int j = k; j >= 2; j--){
//		if (i%j == 0){
//			int temp = i;
//			while (temp != 1 && temp%j == 0){
//				temp /= j;
//			}
//			if (temp == 1){
//				return true;
//			}
//		}
//	}
//	return false;
//}
//int main(){
//	long long n;
//	cin >> n;
//	long long ans = 0;
//	ans += n*(2 * n - 1);//以1位底的互相组合n*n，两边相同的n*(n-1)
//	ans %= 1000000007;
//	for (int i = 2; i<n; i++){//求非1为底，两边不相同的组合。
//		if (i*i>n){//停止条件
//			break;
//		}
//		if (!zhishu(i)){//不是1-（i-1）的某个数的幂次就运行fun函数，计算种类数
//			ans += 2 * fun(i, n);//函数没有调转，所以*2
//		}
//		ans %= 1000000007;
//	}
//
//	cout << ans;
//	system("pause");
//}
